{
  "name": "ng2-admin",
  "version": "0.7.0",
  "description": "Angular 2 and Bootstrap 4 Admin Template.",
  "author": "akveo",
  "homepage": "http://akveo.github.io/ng2-admin/",
  "license": "MIT",
  "dependencies": {
    "@angular/common": "~2.4.3",
    "@angular/compiler": "~2.4.3",
    "@angular/core": "~2.4.3",
    "@angular/forms": "~2.4.3",
    "@angular/http": "~2.4.3",
    "@angular/platform-browser": "~2.4.3",
    "@angular/platform-browser-dynamic": "~2.4.3",
    "@angular/platform-server": "~2.4.3",
    "@angular/router": "~3.4.3",
    "@angularclass/conventions-loader": "^1.0.2",
    "@angularclass/hmr": "~1.2.2",
    "@angularclass/hmr-loader": "~3.0.2",
    "angular-split": "^0.1.19",
    "animate.css": "^3.5.1",
    "assets-webpack-plugin": "^3.4.0",
    "async": "^2.4.1",
    "bootstrap": "4.0.0-alpha.4",
    "bootstrap-loader": "2.0.0-beta.12",
    "ckeditor": "^4.5.9",
    "core-js": "^2.4.1",
    "extract-text-webpack-plugin": "2.0.0-beta.3",
    "file-saver": "^1.3.2",
    "font-awesome": "^4.6.1",
    "font-awesome-sass-loader": "^1.0.2",
    "http-server": "^0.9.0",
    "ie-shim": "^0.1.0",
    "intl": "^1.2.5",
    "ionicons": "^2.0.1",
    "jquery": "^2.2.3",
    "jquery-slimscroll": "^1.3.6",
    "jquery.scrollto": "^2.1.2",
    "leaflet": "^0.7.7",
    "leaflet-map": "^0.2.1",
    "lodash": "^4.12.0",
    "mp3-parser": "^0.2.7",
    "ng2-bootstrap": "1.1.14",
    "ng2-ckeditor": "1.0.7",
    "ng2-file-upload": "^1.1.3-0",
    "ng2-tree": "^0.0.2-7",
    "ng2-uploader": "1.1.0",
    "ngx-bootstrap": "^1.6.6",
    "normalize.css": "^4.1.1",
    "postcss": "^5.2.10",
    "postcss-loader": "^1.2.2",
    "primeng": "2.0.0",
    "rxjs": "~5.0.2",
    "tether": "^1.2.4",
    "tooltipster": "^4.1.6",
    "video.js": "^5.16.0",
    "videojs-wavesurfer": "^1.2.7",
    "wavesurfer.js": "~1.3.0",
    "zone.js": "~0.7.4"
  },
  "devDependencies": {
    "@types/hammerjs": "^2.0.33",
    "@types/jasmine": "^2.2.34",
    "@types/jquery": "^2.0.39",
    "@types/jquery.slimscroll": "^1.3.30",
    "@types/lodash": "0.0.28",
    "@types/node": "^6.0.38",
    "@types/selenium-webdriver": "2.44.29",
    "@types/source-map": "^0.1.27",
    "@types/uglify-js": "^2.0.27",
    "@types/webpack": "2.0.0",
    "angular2-router-loader": "^0.3.4",
    "angular2-template-loader": "^0.6.0",
    "awesome-typescript-loader": "^2.2.4",
    "codelyzer": "~1.0.0-beta.4",
    "compression-webpack-plugin": "^0.3.1",
    "copy-webpack-plugin": "^3.0.1",
    "css-loader": "^0.25.0",
    "electron": "^1.4.0",
    "es6-promise": "^3.1.2",
    "es6-shim": "^0.35.0",
    "es7-reflect-metadata": "^1.6.0",
    "exports-loader": "^0.6.3",
    "expose-loader": "^0.7.1",
    "file-loader": "^0.9.0",
    "gh-pages": "^0.11.0",
    "html-webpack-plugin": "^2.21.0",
    "imports-loader": "^0.6.5",
    "istanbul-instrumenter-loader": "^1.0.0",
    "json-loader": "^0.5.4",
    "karma": "^1.2.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-coverage": "^1.1.1",
    "karma-jasmine": "^1.0.2",
    "karma-mocha-reporter": "^2.0.0",
    "karma-remap-coverage": "^0.1.1",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "1.8.0",
    "node-sass": "^3.5.3",
    "parse5": "^2.2.2",
    "postcss-loader": "^1.0.0",
    "raw-loader": "0.5.1",
    "resolve-url-loader": "^1.4.3",
    "rimraf": "~2.5.4",
    "sass-loader": "^4.0.2",
    "script-ext-html-webpack-plugin": "^1.3.2",
    "source-map-loader": "^0.1.5",
    "string-replace-loader": "1.0.5",
    "style-loader": "^0.13.1",
    "to-string-loader": "^1.1.4",
    "ts-helpers": "1.1.2",
    "ts-node": "^1.7.0",
    "tslint": "3.15.1",
    "tslint-loader": "^2.1.3",
    "typedoc": "^0.5.0",
    "typescript": "2.0.3",
    "url-loader": "^0.5.7",
    "v8-lazy-parse-webpack-plugin": "^0.3.0",
    "video.js": "^5.15.1",
    "webpack": "2.1.0-beta.27",
    "webpack-dashboard": "^0.1.8",
    "webpack-dev-middleware": "^1.6.1",
    "webpack-dev-server": "2.1.0-beta.11",
    "webpack-md5-hash": "^0.0.5",
    "webpack-merge": "^0.17.0"
  },
  "scripts": {
    "rimraf": "rimraf",
    "tslint": "tslint",
    "typedoc": "typedoc",
    "webpack": "webpack --progress --profile",
    "webpack-dev-server": "webpack-dev-server",
    "webdriver-manager": "webdriver-manager",
    "clean": "npm cache clean && npm run rimraf -- node_modules doc coverage dist",
    "clean:dist": "npm run rimraf -- dist",
    "clean:electron": "npm run rimraf -- build",
    "preclean:install": "npm run clean",
    "clean:install": "npm set progress=false && npm install",
    "preclean:start": "npm run clean",
    "clean:start": "npm start",
    "watch": "npm run watch:dev",
    "watch:dev": "npm run build:dev -- --watch",
    "watch:dev:hmr": "npm run watch:dev -- --hot",
    "watch:prod": "npm run build:prod -- --watch",
    "build": "npm run build:dev",
    "prebuild:dev": "npm run clean:dist",
    "build:dev": "npm run webpack -- --config config/webpack.dev.js",
    "prebuild:prod": "npm run clean:dist",
    "build:prod": "npm run webpack -- --config config/webpack.prod.js",
    "server": "npm run server:dev",
    "server:dev": "webpack-dev-server --config config/webpack.dev.js --progress --profile --watch --content-base src/",
    "server:dev:hmr": "npm run server:dev -- --inline --hot",
    "server:prod": "http-server dist --cors",
    "webdriver:update": "npm run webdriver-manager update",
    "webdriver:start": "npm run webdriver-manager start",
    "lint": "npm run tslint \"src/**/*.ts\" --force",
    "pree2e": "npm run webdriver:update -- --standalone",
    "pretest": "npm run lint",
    "docs": "npm run typedoc -- --options typedoc.json --exclude '**/*.spec.ts' ./src/",
    "gh-pages": "wintersmith build -C docs && gh-pages -d docs/build",
    "start": "npm run server:dev",
    "start:hmr": "npm run server:dev:hmr",
    "version": "npm run build",
    "postversion": "git push && git push --tags",
    "build:electron": "npm run build:electron.full",
    "prebuild:electron.full": "npm run clean:electron",
    "build:electron.full": "npm run build:electron.renderer && npm run build:electron.main",
    "postbuild:electron.full": "npm run electron:start",
    "build:electron.renderer": "npm run webpack -- --config config/electron/webpack.renderer.prod.js",
    "build:electron.main": "npm run webpack -- --config config/electron/webpack.electron.prod.js",
    "electron:start": "electron build"
  }
}
